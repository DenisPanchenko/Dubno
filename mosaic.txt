
uniform sampler2D quadTexture;
uniform float Num;
uniform float Threshhold;
varying vec2 vTex;

void main(void){
	float NumTiles = Num;
	vec3 EdgeColor = vec3(0.7);
	float size = 1.0/NumTiles;
	vec2 sizev = vec2(size);
        vec2 base = vTex - mod(vTex,sizev);
	vec2 center = base + 0.5*sizev;
        vec2 st = (vTex - base)/size;
        vec4 c1 = vec4(0.0);
        vec4 c2 = vec4(0.0);
        vec4 invOff = vec4((vec3(1.0)-EdgeColor),1.0);
	if (st.x > st.y) { c1 = invOff; }
    	float threshholdB =  1.0 - Threshhold;
    	if (st.x > threshholdB) { c2 = c1; }
    	if (st.y > threshholdB) { c2 = c1; }
    	vec4 cBottom = c2;
    	c1 = vec4(0.0);
    	c2 = vec4(0.0);
    	if (st.x > st.y) { c1 = invOff; }
    	if (st.x < Threshhold) { c2 = c1; }
    	if (st.y < Threshhold) { c2 = c1; }
    	vec4 cTop = c2;
    	vec4 tileColor = texture2D(quadTexture,center);
   	vec4 result = tileColor + cTop - cBottom;
    	gl_FragColor=result;
}